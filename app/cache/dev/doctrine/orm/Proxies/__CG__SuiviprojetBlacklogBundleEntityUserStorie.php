<?php

namespace Proxies\__CG__\Suiviprojet\BlacklogBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class UserStorie extends \Suiviprojet\BlacklogBundle\Entity\UserStorie implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdUserStorie()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idUserStorie"];
        }
        $this->__load();
        return parent::getIdUserStorie();
    }

    public function setFonctionnalite($fonctionnalite)
    {
        $this->__load();
        return parent::setFonctionnalite($fonctionnalite);
    }

    public function getFonctionnalite()
    {
        $this->__load();
        return parent::getFonctionnalite();
    }

    public function setRole($role)
    {
        $this->__load();
        return parent::setRole($role);
    }

    public function getRole()
    {
        $this->__load();
        return parent::getRole();
    }

    public function setAction($action)
    {
        $this->__load();
        return parent::setAction($action);
    }

    public function getAction()
    {
        $this->__load();
        return parent::getAction();
    }

    public function setBut($but)
    {
        $this->__load();
        return parent::setBut($but);
    }

    public function getBut()
    {
        $this->__load();
        return parent::getBut();
    }

    public function setPoints($points)
    {
        $this->__load();
        return parent::setPoints($points);
    }

    public function getPoints()
    {
        $this->__load();
        return parent::getPoints();
    }

    public function addSprintsprint(\Suiviprojet\BlacklogBundle\Entity\Sprint $sprintsprint)
    {
        $this->__load();
        return parent::addSprintsprint($sprintsprint);
    }

    public function removeSprintsprint(\Suiviprojet\BlacklogBundle\Entity\Sprint $sprintsprint)
    {
        $this->__load();
        return parent::removeSprintsprint($sprintsprint);
    }

    public function getSprintsprint()
    {
        $this->__load();
        return parent::getSprintsprint();
    }

    public function setIdprojet(\Suiviprojet\BlacklogBundle\Entity\Projet $idprojet = NULL)
    {
        $this->__load();
        return parent::setIdprojet($idprojet);
    }

    public function getIdprojet()
    {
        $this->__load();
        return parent::getIdprojet();
    }

    public function setPrioritepriorite(\Suiviprojet\BlacklogBundle\Entity\Priorite $prioritepriorite = NULL)
    {
        $this->__load();
        return parent::setPrioritepriorite($prioritepriorite);
    }

    public function getPrioritepriorite()
    {
        $this->__load();
        return parent::getPrioritepriorite();
    }

    public function setStatutstatut(\Suiviprojet\BlacklogBundle\Entity\Statut $statutstatut = NULL)
    {
        $this->__load();
        return parent::setStatutstatut($statutstatut);
    }

    public function getStatutstatut()
    {
        $this->__load();
        return parent::getStatutstatut();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idUserStorie', 'fonctionnalite', 'role', 'action', 'but', 'points', 'sprintsprint', 'idprojet', 'prioritepriorite', 'statutstatut');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}