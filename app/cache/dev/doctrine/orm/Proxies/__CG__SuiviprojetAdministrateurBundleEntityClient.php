<?php

namespace Proxies\__CG__\Suiviprojet\AdministrateurBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Client extends \Suiviprojet\AdministrateurBundle\Entity\Client implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getIdclient()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["idclient"];
        }
        $this->__load();
        return parent::getIdclient();
    }

    public function setSociete($societe)
    {
        $this->__load();
        return parent::setSociete($societe);
    }

    public function getSociete()
    {
        $this->__load();
        return parent::getSociete();
    }

    public function setNomContact($nomContact)
    {
        $this->__load();
        return parent::setNomContact($nomContact);
    }

    public function getNomContact()
    {
        $this->__load();
        return parent::getNomContact();
    }

    public function setPrenomContact($prenomContact)
    {
        $this->__load();
        return parent::setPrenomContact($prenomContact);
    }

    public function getPrenomContact()
    {
        $this->__load();
        return parent::getPrenomContact();
    }

    public function setTelephoneContact($telephoneContact)
    {
        $this->__load();
        return parent::setTelephoneContact($telephoneContact);
    }

    public function getTelephoneContact()
    {
        $this->__load();
        return parent::getTelephoneContact();
    }

    public function setIdentifiantconnection($identifiantconnection)
    {
        $this->__load();
        return parent::setIdentifiantconnection($identifiantconnection);
    }

    public function getIdentifiantconnection()
    {
        $this->__load();
        return parent::getIdentifiantconnection();
    }

    public function setPasswordconnection($passwordconnection)
    {
        $this->__load();
        return parent::setPasswordconnection($passwordconnection);
    }

    public function getPasswordconnection()
    {
        $this->__load();
        return parent::getPasswordconnection();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'idclient', 'societe', 'nomContact', 'prenomContact', 'telephoneContact', 'identifiantconnection', 'passwordconnection');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}